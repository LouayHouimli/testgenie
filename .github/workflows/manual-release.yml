name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
      release_notes:
        description: "Release notes (optional)"
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js (for npm registry)
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

      - name: Build project
        run: bun run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: bump
        run: |
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --no-git-tag-version)
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "version_number=${NEW_VERSION#v}" >> $GITHUB_OUTPUT

      - name: Update package.json and create tag
        run: |
          git add package.json
          # Add lock file if it exists
          git add bun.lockb 2>/dev/null || git add package-lock.json 2>/dev/null || true
          git commit -m "chore: release ${{ steps.bump.outputs.version }}"
          git tag ${{ steps.bump.outputs.version }}

      - name: Push changes and tags
        run: |
          git push origin main
          git push origin ${{ steps.bump.outputs.version }}

            - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.bump.outputs.version }}
          name: TestGenie AI ${{ steps.bump.outputs.version }}
          body: |
            ## 🎉 Release Notes

            ${{ github.event.inputs.release_notes }}

            ## 📦 Installation
            ```bash
            npm install -g testgenie-ai@${{ steps.bump.outputs.version_number }}
            ```

            ## 🔗 Links
            - 📖 [Documentation](https://github.com/testgenie-ai/testgenie#readme)
            - 🐛 [Report Issues](https://github.com/testgenie-ai/testgenie/issues)
            - 💬 [Discussions](https://github.com/testgenie-ai/testgenie/discussions)
          draft: false
          prerelease: false
          generate_release_notes: true

      - name: Verify package build
        run: |
          echo "📦 Checking package contents..."
          ls -la
          if [ -f "package.json" ]; then
            echo "✅ package.json found"
            cat package.json | jq .name,.version,.main
          else
            echo "❌ package.json not found"
            exit 1
          fi

      - name: Publish to npm
        run: |
          echo "🚀 Publishing to npm..."
          echo "Registry: $(npm config get registry)"
          echo "Auth token configured: $([ -n "$NODE_AUTH_TOKEN" ] && echo "✅ Yes" || echo "❌ No")"

          # Use npm for publishing since it's more reliable
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify npm publication
        run: |
          echo "🔍 Verifying npm publication..."
          sleep 10  # Wait for npm to process
          npm view testgenie-ai@${{ steps.bump.outputs.version_number }} version || echo "⚠️ Package not found on registry yet"

      - name: Notify success
        run: |
          echo "🎉 Successfully released ${{ steps.bump.outputs.version }}"
          echo "📦 Published to npm: https://www.npmjs.com/package/testgenie-ai"
          echo "🏷️ GitHub release: https://github.com/testgenie-ai/testgenie/releases/tag/${{ steps.bump.outputs.version }}"
