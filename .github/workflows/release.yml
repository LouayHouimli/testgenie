name: Release and Publish

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      version_type:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js (for npm registry)
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun test

      - name: Build project
        run: bun run build

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Determine version bump
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "type=${{ github.event.inputs.version_type }}" >> $GITHUB_OUTPUT
          else
            # Auto-determine version bump based on commit messages
            if git log --format=%B -n 1 ${{ github.sha }} | grep -qE "BREAKING CHANGE|!:"; then
              echo "type=major" >> $GITHUB_OUTPUT
            elif git log --format=%B -n 1 ${{ github.sha }} | grep -qE "^feat"; then
              echo "type=minor" >> $GITHUB_OUTPUT
            else
              echo "type=patch" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version
        id: bump
        run: |
          NEW_VERSION=$(npm version ${{ steps.version.outputs.type }} --no-git-tag-version)
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "version_number=${NEW_VERSION#v}" >> $GITHUB_OUTPUT

      - name: Update package.json and create tag
        run: |
          git add package.json bun.lockb
          git commit -m "chore: bump version to ${{ steps.bump.outputs.version }} [skip ci]"
          git tag ${{ steps.bump.outputs.version }}

      - name: Push changes and tags
        run: |
          git push origin main
          git push origin ${{ steps.bump.outputs.version }}

      - name: Generate changelog
        id: changelog
        run: |
          # Simple changelog generation
          CHANGELOG=$(git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD~1)..HEAD 2>/dev/null || git log --pretty=format:"- %s" --max-count=10)
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.version }}
          release_name: Release ${{ steps.bump.outputs.version }}
          body: |
            ## Changes
            ${{ steps.changelog.outputs.changelog }}

            ## Installation
            ```bash
            npm install -g testgenie-ai@${{ steps.bump.outputs.version_number }}
            ```
          draft: false
          prerelease: false

      - name: Publish to npm
        run: bun publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify success
        run: |
          echo "🎉 Successfully released ${{ steps.bump.outputs.version }}"
          echo "📦 Published to npm: https://www.npmjs.com/package/testgenie-ai"
          echo "🏷️ GitHub release: https://github.com/testgenie-ai/testgenie/releases/tag/${{ steps.bump.outputs.version }}"
